LED

c := {y - x | x in {1..2} & y in {10 * x, 100 * x}}

scratch

y

C2(x) := [10 * x, 100 * x]
// p2(x) := `y in C2(x)

S_p2(x)[i] := [[C2(x)[i]]]
// S_p2(x) == [[10 * x], [100 * x]]

x

C1 := [1..2]
// p1 := `x in C1

S_p1[i] := [[C1[i]]]
// S_p1 == [[1], [2]]

x, y

S_p_deep[i1][i2] := 
    let b1  := S_p1[i1]
        b2  := S_p2(x)[i2]
    in b1 ++ b2
    
S_p := join(S_p_deep)
// S_p == [[]]

    S_p0_h(x)[i] :=
        let b   := S_p2(x)[i]
        in insertHead(x, b)
    // S_p0(x) == [[x, 10 * x], [x, 100 * x]]
        
    S_p0[i] :=
        let x   := 
        
term

t(x, y) := y - x

c[i] :=
    let b   := S_p[i]
        x   := b[1]
        y   := b[2]
    in t(x, y)
