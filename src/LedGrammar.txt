program(prog PE) ::= prog_el(PE)
program(prog PE cut_root(P)) ::= prog_el(PE) program(P)

term(T) ::= lPar term(T) rPar
term(V) ::= variable(V)
term(T) ::= tuple(T)
term(S) ::= set(S)
term(I) ::= interval(I)
term(BT) ::= bool_term(BT)
term(AT) ::= ar_term(AT)
term(LE) ::= lam_ex(LE)

term_s(terms T) ::= term(T)
term_s(terms T cut_root(Ts)) ::= term(T) comma term_s(Ts)

truth(tru T) ::= true(T)
truth(tru F) ::= false(F)

tuple(tup T Ts) ::= lPar term(T) comma term_s(Ts) rPar

set(st) ::= lBrace rBrace
set(st Ts) ::= lBrace term_s(Ts) rBrace

interval(nrval N1 N2) ::= lBrace num(N1) twoDot num(N2) rBrace

lam_ex(lamEx Vs T) ::= lam var_s(Vs) dot term(T)

bool_term(T) ::= truth(T)
bool_term(BR) ::= bi_rel(BR)

//todo bool connectives

bi_rel(eq AT1 AT2) ::= ar_term(AT1) equal ar_term(AT2)
bi_rel(less AT1 AT2) ::= ar_term(AT1) lessThan ar_term(AT2)
bi_rel(greater AT1 AT2) ::= ar_term(AT1) greaterThan ar_term(AT2)
bi_rel(lessEq AT1 AT2) ::= ar_term(AT1) lessOrEq ar_term(AT2)
bi_rel(greaterEq AT1 AT2) ::= ar_term(AT1) greaterOrEq ar_term(AT2)

ar_term(BS) ::= bi_sum(BS)

bi_sum(BP) ::= bi_prod(BP)
bi_sum(add BS BP) ::= bi_sum(BS) plus bi_prod(BP)
bi_sum(biMinus BS BP) ::= bi_sum(BS) minus bi_prod(BP)

bi_prod(ST) ::= sign_term(ST)
bi_prod(mult BP ST) ::= bi_prod(BP) multiplied sign_term(ST)
bi_prod(div BP ST) ::= bi_prod(BP) divided sign_term(ST)
bi_prod(md BP ST) ::= bi_prod(BP) mod sign_term(ST)

sign_term(E) ::= expo(E)
sign_term(E) ::= plus expo(E)
sign_term(uMinus E) ::= minus expo(E)

expo(AAT) ::= atom_ar_term(AAT)
expo(exp AAT E) ::= atom_ar_term(AAT) caret expo(E)

atom_ar_term(AT) ::= lPar ar_term(AT) rPar
atom_ar_term(V) ::= variable(V)
atom_ar_term(N) ::= num(N)
atom_ar_term(flr AT) ::= floor lPar ar_term(AT) rPar
atom_ar_term(clng AT) ::= ceil lPar ar_term(AT) rPar
atom_ar_term(abs AT) ::= bar ar_term(AT) bar

variable(vName I) ::= id(I)

var_s(vars V) ::= variable(V)
var_s(vars V cut_root(Vs)) ::= variable(V) comma var_s(Vs)

var_in_term(varInT V T) ::= variable(V) in term(T)

var_s_in_term(varsInT Vs T) ::= var_s(Vs) in term(T)

var_s_in_term_s(varsInTs VsIT) ::= var_s_in_term(VsIT)
var_s_in_term_s(varsInTs VsIT cut_root(VsITs)) ::= var_s_in_term(VsIT) comma var_s_in_term_s(VsITs)

var_decl(varDecl VIT) ::= var var_in_term(VIT) diamond
var_decl(varDecl VsITs) ::= vars var_s_in_term_s(VsITs) diamond

f_name(fName I) ::= id(I)

def_head(defHead FN) ::= f_name(FN)
def_head(defHead FN Vs) ::= f_name(FN) lPar var_s(Vs) rPar

f_def(fDef DH T) ::= def def_head(DH) equal term(T) diamond

prog_el(VD) ::= var_decl(VD)
prog_el(FD) ::= f_def(FD)
