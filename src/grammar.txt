program(prog PE) ::= prog_el(PE)
program(prog PE cut_root(P)) ::= prog_el(PE) program(P)


term(N) ::= num(N)
term(TV) ::= truth_val(TV)
term(T) ::= tuple(T)
term(S) ::= set(S)
term(LE) ::= lam_ex(LE)

term_list(termList T) ::= term(T)
term_list(termList T cut_root(TL)) ::= term(T) comma term_list(TL)

truth_val(truthVal T) ::= true(T)
truth_val(truthVal F) ::= false(F)

tuple(tup T TL) ::= leftPar term(T) comma term_list(TL) rightPar

set(st) ::= lBrace rBrace
set(st) ::= lBrace termList rBrace

lam_ex(lamEx VL T) ::= lam var_list(VL) dot term(T)

prog_el(F) ::= fun_def(F)

variable(var I) ::= id(I)

var_list(varList V) ::= variable(V)
var_list(varList V cut_root(VL)) ::= variable(V) comma var_list(VL)

var_list_in_term(varListInTerm VL T) ::= var_list(VL) in term(T)

var_list_in_term_list(varListInTermList VLIT) ::= var_list_in_term(VLIT)
var_list_in_term_list(varListInTermList VLIT cut_root(VLITL)) ::= var_list_in_term(VLIT) comma var_list_in_term_list(VLITL)

var_decl(varDecl V T) ::= var variable(V) in term(T) diamond
var_decl(varDecl VLITL) ::= vars var_list_in_term_list(VLITL) diamond

def_head(defHead I) ::= id(I)
def_head(defHead I VL) ::= id(I) leftPar var_list(VL) rightPar

fun_def(funDef DH T) ::= def def_head(DH) equal term(T) diamond
